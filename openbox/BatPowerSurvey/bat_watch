#!/bin/bash 

set -o errexit

[ BAT_CFG ] 
{ 
BAT_CRITICAL_POWER_LVL=20
BAT_DANGER_POWER_LVL=10 
BAT_ENABLE_NOTIFY=true
BAT_NOTIFY_SENDER="notify-send"
BAT_MODULE_USED="acpi"
BAT_BEEP=beep.ogg
readonly BIN_EXEC=/usr/bin/
readonly AUTO_START=${HOME}/.config/autostart/
declare -a  MODULES=(${BAT_MODULE_USED} ${BAT_NOTIFY_SENDER})
declare -ar BAT_COMMON_STATUS=("unknown" "discharging" "full" "charging")
}
[ ERR_EXIT_CODE ]  
{
    NO_MOD_FOUND=$((0X3dF))
    ARGS_ERR=$((0X1eA))
    SYMSL_ERR=$((0X2EF))
}

make_symlink() {
    local script_basename=$(basename $0)
    readonly TARGET_PATH=${PWD}/${script_basename} 
    readonly DESTINATION_PATH=${AUTO_START}${script_basename}
    $(ln -s  ${TARGET_PATH}  ${DESTINATION_PATH}) 
    [[  $? -eq $((0x00)) ]]  &&  return 0  
}
[ AUTO_START ] 
(
    if [[  -n ${1} ]] ;then  
        case $1 in 
            "--make-autostart")  
                [[ -L ${AUTO_START}${0##*/} ]] && {
                   
                   echo -e "symlinks [already set]" 
                   read -p "create a new one  ?  yes | no ! " 
                   case  ${REPLY,,}  in 
                         "yes"|"y"|"e"|"s") 
                             echo -e "removing symlinks " 
                             sleep 2 
                             $(rm ${AUTO_START}$(basename $0))
                             [[  $? -eq 0 ]]  ||  {
                                echo -e " fail to remove the symlink"
                                exit 3 
                             }
                             echo -e "creating  new symlink " 
                             sleep 2 
                             make_symlink
                             test $? -eq  0 && echo "symlinks successfully created  !! ";;  
                            *)  echo -e "Operation canceled" ;; 
                        esac 
                   echo -e "press CTRL + c to exit "
                }|| {
                    echo -n "creating symlink autostart  for ${0##*/}... "
                    #$(ln -s  ${PWD}/${0##*/} ${AUTO_START}${0##*/})
                    make_symlink
                    symlink_status=$?
                    sleep 2 
                    if  [[ ${symlink_status} -eq 0 ]] ;then  
                        echo  -e "[ done ]"
                        echo -e  "press CTRL + c to exit "
                    else 
                        echo "cannot make an symlinks..."
                        exit ${SYMSL_ERR} 
                    fi
                }
                ;;
            *)
                echo -e "argsAvaib ->  --make-autostart  [ ARGS_ERR ] "
                exit ${ARGS_ERR} ;
            esac
    fi    
)
[[  MODULE::CONTROL ]]  
{
for module in ${MODULES[@]} ; do 
    [[ !  -x  /usr/bin/${module} ]] && { 
        echo " need  ${module} module" 
        exit $NO_MOD_FOUND 
    }
done 
} 
notified=$((0X000)) 
w_status=""
while [[  ${BAT_ENABLE_NOTIFY}  ]]; do 
    # Battery  power 
    BAT_UTILS_DATA=$(${BAT_MODULE_USED} | cut -d , -f2) 
    # Battery   status  
    BAT_STATUS=$(${BAT_MODULE_USED}  | cut -d , -f1  | cut  -d : -f2 ) 
     
    if  [[  "${BAT_STATUS}" != "${w_status}" ]] ; then
        w_status=${BAT_STATUS}
        # allways show notification on battery status  
        $(${BAT_NOTIFY_SENDER}  "Battery status" ${w_status}) 
    fi 
    if  [[  ${BAT_UTILS_DATA%%%} -lt ${BAT_CRITICAL_POWER_LVL} ]] ; then 

        [[ ${notified} -eq 0 ]]  && { 
            play ../${BAT_BEEP} 
            $(${BAT_NOTIFY_SENDER} --urgency=critical "Battery power supply low" " please charge your battery")
            notified=1
        }
    else  notified=0
    fi  
    sleep 2
done 
